package group6.model;
// Generated by Together


import java.util.ArrayList;
import java.util.List;

/**
 * Contains an array of PassengerDetails objects - one per passenger on a flight.
 * Incoming flights supply their passenger list in their flight descriptor, and the ManagementRecord for the flight extracts the PassengerList and holds it separately.
 * Outbound flights have PassengerLists built from passenger details supplied by the gate consoles, and the list is uploaded to the aircraft as it departs in a newly built FlightDescriptor.
 * @stereotype entity
 * @url element://model:project::SAAMS/design:view:::id1un8dcko4qme4cko4sw27
 * @url element://model:project::SAAMS/design:view:::id1jkohcko4qme4cko4svww
 */
public class PassengerList {
    // /**
    //  * The array of PassengerDetails objects.
    //  * @byValue
    //  * @clientCardinality 1
    //  * @directed true
    //  * @label contains
    //  * @shapeType AggregationLink
    //  * @supplierCardinality 0..*
    //  */
    // private PassengerDetails[] details = new PassengerDetails[10];

  /**
   * The list of PassengerDetails objects.
   * @byValue
   * @clientCardinality 1
   * @directed true
   * @label contains
   * @shapeType AggregationLink
   * @supplierCardinality 0..*
   */
  // use an array list as we'll be able to fetch by a given index, just like an array
  // but the list can be resized dynamically without manual code having to resize it
  private List<PassengerDetails> details = new ArrayList<PassengerDetails>();

  /**
   * The given passenger is boarding.
   * Their details are recorded, in the passenger list.
   * @preconditions Status is READY_PASSENGERS
   */
  public void addPassenger(PassengerDetails details){
    // using an array complicates this, we'll have to keep track of the index, and we'll have to initialise the array
    // this.details[0] = details;

    // add passenger details to the list.
    this.details.add(details);
  }
}
